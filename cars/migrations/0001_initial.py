# Generated by Django 5.2.6 on 2025-09-17 11:07

import django.core.validators
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Car",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("make", models.CharField(max_length=128)),
                ("model", models.CharField(max_length=128)),
                (
                    "year",
                    models.PositiveIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1900),
                            django.core.validators.MaxValueValidator(2026),
                        ]
                    ),
                ),
                (
                    "fuel_type",
                    models.CharField(
                        choices=[
                            ("gasoline", "Gasoline"),
                            ("diesel", "Diesel"),
                            ("hybrid", "Hybrid"),
                            ("electric", "Electric"),
                        ],
                        default="gasoline",
                        max_length=20,
                    ),
                ),
                (
                    "transmission",
                    models.CharField(
                        choices=[
                            ("manual", "Manual"),
                            ("automatic", "Automatic"),
                            ("cvt", "CVT"),
                        ],
                        default="manual",
                        max_length=20,
                    ),
                ),
                (
                    "seats",
                    models.PositiveSmallIntegerField(
                        default=5,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(15),
                        ],
                    ),
                ),
                (
                    "doors",
                    models.PositiveSmallIntegerField(
                        default=4,
                        validators=[
                            django.core.validators.MinValueValidator(2),
                            django.core.validators.MaxValueValidator(6),
                        ],
                    ),
                ),
                (
                    "price_per_day",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=8,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                ("location", models.CharField(max_length=255)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("available", "Available"),
                            ("maintenance", "Under Maintenance"),
                            ("unavailable", "Unavailable"),
                            ("rented", "Currently Rented"),
                        ],
                        default="available",
                        max_length=32,
                    ),
                ),
                (
                    "features",
                    models.TextField(
                        blank=True,
                        help_text="Comma-separated list of features (e.g., 'GPS, AC, Bluetooth')",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CarImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file", models.ImageField(upload_to="cars/%Y/%m/")),
                ("alt", models.CharField(blank=True, max_length=128)),
                ("is_primary", models.BooleanField(default=False)),
                ("order", models.PositiveSmallIntegerField(default=0)),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["-is_primary", "order", "uploaded_at"],
            },
        ),
        migrations.CreateModel(
            name="CarReview",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rating",
                    models.PositiveSmallIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ]
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=200)),
                ("comment", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_approved", models.BooleanField(default=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
    ]
